// Code generated by mockery v2.14.1. DO NOT EDIT.

package mocks

import (
	context "context"

	domain "github.com/jabardigitalservice/portal-jabar-services/core-service/src/domain"
	mock "github.com/stretchr/testify/mock"
)

// FeedbackRepository is an autogenerated mock type for the FeedbackRepository type
type FeedbackRepository struct {
	mock.Mock
}

// Store provides a mock function with given fields: ctx, a
func (_m *FeedbackRepository) Store(ctx context.Context, a *domain.Feedback) error {
	ret := _m.Called(ctx, a)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *domain.Feedback) error); ok {
		r0 = rf(ctx, a)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewFeedbackRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewFeedbackRepository creates a new instance of FeedbackRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewFeedbackRepository(t mockConstructorTestingTNewFeedbackRepository) *FeedbackRepository {
	mock := &FeedbackRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
