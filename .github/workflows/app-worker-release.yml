name: Release

on:
  release:
    types: [created]
    paths:
      - service-worker/**

defaults:
  run:
    working-directory: service-worker

jobs:
  deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # Configure Docker with Credentials
    - name: Configure Docker
      run: |
        docker login ${{ secrets.REGISTRY_URL }} -u ${{ secrets.REGISTRY_USERNAME }} -p "${{ secrets.REGISTRY_PASSWORD }}"
     # Build the Docker image
    - name: Get release tag
      id: vars
      run: echo ::set-output name=RELEASE_TAG::${GITHUB_REF/refs\/tags\//}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        file: service-worker/docker/Dockerfile
        context: ./service-worker
        push: true
        tags: ${{ secrets.SERVICE_WORKER_IMAGENAME }}:${{ steps.vars.outputs.RELEASE_TAG }}

   # GitOps
    - name: GitOps ArgoCD Setup
      run: |
        echo "${{ secrets.GITLAB_ARGOCD_KEY }}" > /tmp/gitlab-deploy-ssh-key
        chmod 600 /tmp/gitlab-deploy-ssh-key
        export GIT_SSH_COMMAND="ssh -i /tmp/gitlab-deploy-ssh-key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
        git clone ${{ secrets.GITLAB_ARGOCD_REPOSITORY }}
    - name: GitOps ArgoCD Update Image Tag Service Worker
      uses: mikefarah/yq@master
      with:
        cmd: yq -i '.spec.template.spec.containers[0].image = "${{ secrets.SERVICE_WORKER_IMAGENAME }}:${{ steps.vars.outputs.RELEASE_TAG }}"' 'service-worker/jds-terraform-gke/k8s/portal-jabar-app/production-jcloud/deployment-worker.yaml'

    - name: GitOps ArgoCD Create Branch, Commit, Push
      run: |
        export GIT_SSH_COMMAND="ssh -i /tmp/gitlab-deploy-ssh-key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
        cd jds-terraform-gke/k8s/portal-jabar-app/production-jcloud
        git config user.email "github-action@github.com"
        git config user.name "Github Action"
        git checkout -b portal-jabar-release-sworker-production
        git add deployment-worker.yaml
        git commit -m "Portal Jabar Release Service Worker to Production"
        git push origin portal-jabar-release-sworker-production -o merge_request.description="# Overview \n\n - Portal Jabar API release service worker to production \n\n ## Evidence \n\n - title: Portal Jabar API release service worker to production \n - project: Portal Jabar \n - participants:  " -o merge_request.create
